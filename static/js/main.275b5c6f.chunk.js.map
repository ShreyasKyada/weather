{"version":3,"sources":["search.js","WeatherCard.js","weather.js","index.js"],"names":["Search","props","React","useState","city","setCity","className","type","placeholder","onChange","e","target","value","onClick","getSeachData","WeatherCard","weatherObj","time","setTime","date","setDate","weatherState","setWeatheState","useEffect","main","setInterval","timeStr","Date","toLocaleString","hour","minute","second","hour12","toString","d1","getDate","getMonth","getFullYear","sec","sunset","da","getHours","getMinutes","temp","name","country","humidity","pressure","speed","Weather","setweatherObj","fetchAPI","fetch","then","res","json","data","weather","wind","sys","cityName","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.275b5c6f.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Search = (props) => {\r\n\r\n    const [city, setCity] = React.useState(\"\")\r\n\r\n    const sendCityName = () => {\r\n        props.getSeachData(city);\r\n    }\r\n\r\n    return (\r\n        <div className=\"search-container\">\r\n            <input type=\"search\" placeholder=\"search by city name....\" onChange={(e) => setCity(e.target.value)} />\r\n            <button onClick={() => sendCityName()}>Search</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","import React, { useEffect, useState } from 'react'\r\n\r\nconst WeatherCard = ({ weatherObj }) => {\r\n\r\n    const [time, setTime] = useState(\"\");\r\n    const [date, setDate] = useState(\"\");\r\n    const [weatherState, setWeatheState] = React.useState(\"\");\r\n\r\n    useEffect(() => {\r\n        if (weatherObj.main) {\r\n            switch (weatherObj.main) {\r\n                case \"Clouds\":\r\n                    setWeatheState(\"wi-day-cloudy\");\r\n                    break;\r\n                case \"Haze\":\r\n                    setWeatheState(\"wi-fog\");\r\n                    break;\r\n                case \"Clear\":\r\n                    setWeatheState(\"wi-day-sunny\");\r\n                    break;\r\n                case \"Mist\":\r\n                    setWeatheState(\"wi-dust\");\r\n                    break;\r\n\r\n                default:\r\n                    setWeatheState(\"wi-day-sunny\");\r\n                    break;\r\n            }\r\n        }\r\n    }, [weatherObj.main]);\r\n\r\n    setInterval(() => {\r\n        let d = new Date();\r\n        let timeStr;\r\n        timeStr = d.toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', second: 'numeric', hour12: true });\r\n        setTime(timeStr.toString());\r\n    }, 1000);\r\n\r\n    useEffect(() => {\r\n        let d1 = new Date();\r\n        let timeStr;\r\n        timeStr = d1.getDate() + '/' + d1.getMonth() + '/' + d1.getFullYear();\r\n        setDate(timeStr.toString());\r\n\r\n    }, [])\r\n\r\n    let sec = weatherObj.sunset;\r\n    let da = new Date(sec * 1000);\r\n    let timeStr = `${da.getHours()}:${da.getMinutes()}`;\r\n\r\n    return (\r\n        <div className=\"main-container\">\r\n            <div className=\"inner-container\">\r\n                <div className=\"top-container\">\r\n                    <i className={`wi ${weatherState}`}></i>\r\n                </div>\r\n                <div className=\"middel-container\">\r\n                    <div className=\"middel-1-container\">\r\n                        <span>{weatherObj.temp}&deg;</span>\r\n                        <div className=\"country\">\r\n                            <p>{weatherObj.main}</p>\r\n                            <p>{weatherObj.name}, {weatherObj.country}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"date-time\">\r\n                        <p>{time}</p>\r\n                        <p>{date}</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"last-container\">\r\n                    <div className=\"last-items\">\r\n                        <i className=\"wi wi-humidity\"></i>\r\n                        <div className=\"second-info\">\r\n                            <p>{weatherObj.humidity}</p>\r\n                            <p>humidity</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"last-items\">\r\n                        <i className=\"wi wi-sunset\"></i>\r\n                        <div className=\"second-info\">\r\n                            <p>{timeStr}</p>\r\n                            <p>Sunset</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"last-items\">\r\n                        <i className=\"wi wi-rain\"></i>\r\n                        <div className=\"second-info\">\r\n                            <p>{weatherObj.pressure}</p>\r\n                            <p>Pressure</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"last-items\">\r\n                        <i className=\"wi wi-strong-wind\"></i>\r\n                        <div className=\"second-info\">\r\n                            <p>{weatherObj.speed}</p>\r\n                            <p>Speed</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WeatherCard\r\n","import React, { useState, useEffect } from 'react'\r\nimport Search from './search'\r\nimport WeatherCard from './WeatherCard'\r\n\r\nconst Weather = () => {\r\n\r\n    const [city, setCity] = useState(\"surat\");\r\n    const [weatherObj, setweatherObj] = useState(\"\");\r\n    \r\n    const getSeachData = (cityName) => {\r\n        setCity(cityName);\r\n        fetchAPI();\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchAPI();\r\n    }, [])\r\n\r\n    let fetchAPI = () => {\r\n        fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=80d860b2b0ca9383c7abe860939fa3c3`).then(res => res.json()).then((data) => {\r\n            const { temp, humidity, pressure } = data.main;\r\n            const { main } = data.weather[0];\r\n            const { name } = data;\r\n            const { speed } = data.wind;\r\n            const { country, sunset } = data.sys;\r\n\r\n            const obj = {\r\n                temp,\r\n                humidity,\r\n                pressure,\r\n                main,\r\n                name,\r\n                speed,\r\n                country,\r\n                sunset,\r\n            };\r\n            setweatherObj(obj);\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Search getSeachData={getSeachData} />\r\n            <WeatherCard  weatherObj={weatherObj} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Weather\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport Weather from './weather';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Weather />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n"],"sourceRoot":""}